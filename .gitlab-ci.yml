stages:
  - lint
  - test
  - build
  - test-e2e
  - deploy

include:
  - project: "cocainefarm/templates/ci"
    file: "/container.base.yaml"

default:
  tags:
    - k8s

.cache_backend: &cache_backend
  cache:
    key:
      files:
        - backend/package.json
    paths:
      - ${CI_PROJECT_DIR}/backend/node_modules
      - /usr/local/share/.cache/yarn/v6

.cache_frontend: &cache_frontend
  cache:
    key:
      files:
        - frontend/package.json
    paths:
      - ${CI_PROJECT_DIR}/frontend/node_modules
      - /usr/local/share/.cache/yarn/v6

##################################################
# TEST

variables:
  BASE_IMAGE: node:15.1.0-alpine
  KUBE_CONTEXT: "cocainefarm/agent:vapor-systems"

.lint:
  image: $BASE_IMAGE
  stage: lint
  script:
    - yarn install
    - yarn lint

backend:eslint:
  extends: .lint
  <<: *cache_backend
  before_script:
    - cd backend

frontend:eslint:
  extends: .lint
  <<: *cache_frontend
  before_script:
    - cd frontend

.test:
  image: $BASE_IMAGE
  stage: test

backend:tsc:
  extends: .test
  <<: *cache_backend
  script:
    - cd backend
    - yarn install
    - yarn run tsc

backend:test:
  extends: .test
  <<: *cache_backend
  variables:
    JEST_JUNIT_OUTPUT_DIR: "${CI_PROJECT_DIR}/backend/results"
  script:
    - cd backend
    - yarn install
    - yarn test:unit-ci
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/backend/results/
    reports:
      junit:
        - ${CI_PROJECT_DIR}/backend/results/junit.xml

frontend:test:
  extends: .test
  <<: *cache_backend
  variables:
    JEST_JUNIT_OUTPUT_DIR: "${CI_PROJECT_DIR}/frontend/results"
  script:
    - cd frontend
    - yarn install
    - yarn test:unit-ci
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/frontend/results/
    reports:
      junit:
        - ${CI_PROJECT_DIR}/frontend/results/junit.xml

##################################################
# BUILD
#

.build:
  extends: .container:base
  stage: build

build:backend:
  extends: .build
  needs:
    - backend:eslint
    - backend:test
    - backend:tsc
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:${CI_COMMIT_SHORT_SHA}"
    BUILD_PATH: "backend/"

build:backend:release:
  extends: .build
  needs:
    - backend:eslint
    - backend:test
    - backend:tsc
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:${CI_COMMIT_TAG} kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:latest"
    BUILD_PATH: "backend/"
  only:
    refs:
      - tags

build:frontend:
  extends: .build
  needs:
    - frontend:eslint
    - frontend:test
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:${CI_COMMIT_SHORT_SHA}"
    BUILD_PATH: "frontend/"
    BUILD_ARGS: "NEXT_PUBLIC_LMRD_EVENT_SOURCE=https://dash-stage.linuxmasterrace.org/api/test"

build:frontend:release:
  extends: .build
  needs:
    - frontend:eslint
    - frontend:test
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:${CI_COMMIT_TAG} kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:latest"
    BUILD_PATH: "frontend/"
    BUILD_ARGS: "NEXT_PUBLIC_LMRD_EVENT_SOURCE=https://dash.linuxmasterrace.org/api/test"
  only:
    refs:
      - tags

##################################################
# E2E TEST
test:e2e:
  stage: test-e2e
  image: cypress/browsers:latest
  needs:
    - build:backend
    - build:frontend
  services:
    - name: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:${CI_COMMIT_SHORT_SHA}"
      alias: backend
    - name: mariadb:latest
      alias: db
  variables:
    MYSQL_ROOT_PASSWORD: "root"
    MYSQL_DATABASE: "lmrd"
    LMRD_DB_HOST: "db"
    LMRD_DB_USER: "root"
    LMRD_DB_PASS: "root"
    LMRD_DB_NAME: "lmrd"
    LMRD_IRC_CHANNEL: "#aboftytest"
    NEXT_PUBLIC_LMRD_EVENT_SOURCE: "http://backend:4000"
  script:
    - cd frontend
    - yarn install
    - yarn test:e2e-ci
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/frontend/results/
    reports:
      junit:
        - ${CI_PROJECT_DIR}/frontend/results/test-output-*.xml

##################################################
# DEPLOY

deploy:production:
  image: kube.cat/cocainefarm/helmfile:v0.135.0
  stage: deploy
  needs:
    - build:backend
    - build:frontend
    - test:e2e
  environment:
    name: production
    url: https://dash.linuxmasterrace.org
  before_script:
    - gpg --import "$COCAINEFARM_GPG_PRIVKEY"
  script:
    - kubectl config use-context "${KUBE_CONTEXT}"
    - helmfile -e production apply
  only:
    refs:
      - tags

deploy:staging:
  image: kube.cat/cocainefarm/helmfile:v0.135.0
  stage: deploy
  needs:
    - build:backend
    - build:frontend
    - test:e2e
  environment:
    name: staging
    url: https://dash-stage.linuxmasterrace.org
  before_script:
    - gpg --import "$COCAINEFARM_GPG_PRIVKEY"
  script:
    - kubectl config use-context "${KUBE_CONTEXT}"
    - helmfile -e staging apply
  only:
    refs:
      - lmrdashboard
